name: Build

on: [push, pull_request]

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #### windows-2019, macos-10.15
        #os: [ubuntu-latest]

        os: [ubuntu-latest]
        python: [37, 38, 39]
        bitness: [64]
        manylinux_image: [manylinux2014]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows

          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
    steps:
      - uses: actions/checkout@v2



      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          #CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_BEFORE_BUILD: pip install numba --only-binary
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}


      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl




  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' 
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: zizdlp
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
